#use IO.LIB
#use LED.LIB
#use UTILITIES.LIB
#use MENU.LIB
#use EVENTOS.LIB
#use RTC.lib

#define ON_TIME	400
#define OFF_TIME	800
#define ONE_SECOND	1000

  	struct tm* p1_FechaHora;       // para ingresar hora
	struct tm* p2_FechaHora;       // para consultar hora

main(){
	char p_opcion[3];    // Array para opcion del menu principal.
   char datosEvento[2];       // para pasar los datos de eventos
//   struct tm* p_FechaHora;

// INIT
	HW_init();
   EVENTOS_initEventos();

// LOOP MAQUINAS DE ESTADO
	while(1)
	{
		// Parte 1 - Maquina de estado para verificar que no estamos colgados
		costate RED_LED always_on
		{
			LED_RED_SET();
			waitfor(DelayMs(ON_TIME));
			LED_RED_RESET();
			waitfor(DelayMs(OFF_TIME));
		}

		// Parte 2 - Maquina de estado para mostrar menu y manipular hora y eventos
		costate MENU always_on
		{

       	MENU_mostrarMenuPrincipal();
         waitfor(getswf( p_opcion )) ;
         printf("PRUEBA GET: --- %s ---- \n",&p_opcion[0]);

			switch(p_opcion[0]){
				case ('1'):
            	// FIJAR HORA EN EL RELOJ
               wfd MENU_pedirFechaHora( p1_FechaHora );
            	RTC_fijarFechaHora( p1_FechaHora );
  					printFechaHora( p1_FechaHora );		// Imprimo la Fecha y hora modificadoS
               break;

				case ('2'):
               // CONSULTAR HORA ACTUAL
               wfd MENU_consultarHora();
               RTC_leerFechaHora( p2_FechaHora );	// Leo el RTC
					printFechaHora( p2_FechaHora );		// Imprimo la Fecha y hora
					break;

				case ('3'):
					//	AGREGAR EVENTO
				   MENU_pedirDatosEvento();
				//  EVENTOS_agregarEvento
					break;

				case ('4'):
            		// ELIMINAR EVENTO SEGUN EL NUMERO DE EVENTO (ES DE 1 EN adelante segun posicion en el array))
    					wfd MENU_eliminarEvento();
					break;

				case ('5'):

            	// CONSULTAR EVENTO
					wfd MENU_consultarEventos();
					break;

            case ('6'):

   				printf("Salir");       // Ejecutar para salir
					break;

		 		default:
             	printf("\nOpcion DEFAULT :%s \n",&p_opcion[0]);
            	printf("Vuelva a ingresar\n");

			}
		}

		// Parte 3 - Maquina de estado para checkear si es momento de ejecutar algun evento programado
		costate EVENT_CHECKER always_on
		{
	  	//	wfd MENU_consultarEventos();
    //     EVENTO_ejecutarEventos();
		}

	}
}