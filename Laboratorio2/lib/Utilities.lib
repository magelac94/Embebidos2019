/*** BeginHeader */

/*** EndHeader */

/*** BeginHeader UT_delay */
void UT_delay( long p_ms );
/*** EndHeader */
void UT_delay( long p_ms )
{
	long timer;

	timer = MS_TIMER + p_ms;

	while ((long)(MS_TIMER - timer) < 0);
}

/*** BeginHeader UT_ASCIItoCharNum */
char UT_ASCIItoCharNum( char p_input );
/*** EndHeader */
char UT_ASCIItoCharNum( char p_input )
{
	if( p_input >= '0' && p_input <= '9' )
	{
		return (p_input-'0');
	}
	else if( p_input >= 'A' && p_input <= 'F')
	{
		return (p_input + 10 - 'A');
	}
	else
	{
		return -1;
	}
}

/*** BeginHeader printFechaHora */
void printFechaHora ( struct tm* p_FechaHora );
/*** EndHeader */
// Imprime la fecha y la hora de una estructura tm
void printFechaHora ( struct tm* p_FechaHora ){
	int anio;
   anio = (int)p_FechaHora->tm_year;
   anio = anio + 1900;
	printf("\nFecha: %d/%d/%d\nHora actual: %d:%d",
		p_FechaHora->tm_mday,
		p_FechaHora->tm_mon,
		anio,
		p_FechaHora->tm_hour,
		p_FechaHora->tm_min
		);
}