#use Utilities.lib
#use RTC.lib

/*** BeginHeader */
// Librerias a incluir
// Definicion de macros
// Definicion de estructuras
enum opcionMenu {
	OPCION_1 = 1,
	OPCION_2,
	OPCION_3,
	OPCION_4,
	OPCION_5
};
/*** EndHeader */

// Metodos

int bisiesto(ano){
	return ((ano % 4 == 0 && ano % 100 != 0) || ano % 400   == 0);
}
bool validarano( char ano);
bool validarano( char ano){
	while(1){
		if (ano > "1900" && ano < "5000"){
			return true;
		}
	}
}

bool validarmes( char mes);
bool validarmes( char mes){
	while(1){
		if (mes > "0" && ano < "13"){
			return true;
		}
	}
}

bool validardia( char dia, char mes, char ano);
bool validardia( char dia, char mes, char ano){
	while(1){
		if (mes == '4' || mes== '6' || mes == '9' || mes == "12"){
			if (dia > 0 && dia < 31){
				return true;
			}
		}
		if (mes == '2'){
			if (bisiesto(ano)){
				if (dia > 0 && dia < 30){
				return true;
			}else{
				if (dia > 0 && dia < 29){
				return true;
			}
			
			
		}
		else {
			if (dia > 0 && dia < 32){
				return true;
			}
		}
	}
}

bool validarhora( char hora);
bool validarhora( char hora){
	while(1){
		if (hora > "0" && hora < "25"){
			return true
		}
	}
}

bool validarminuto( char minuto);
bool validarminuto( char minuto){
	while(1){
		if (minuto > "0" && minuto < "60"){
			return true;
		}
	}
}


/*** BeginHeader MENU_mostrarMenuPrincipal */
void MENU_mostrarMenuPrincipal( char* p_opcion );
/*** EndHeader */
void MENU_mostrarMenuPrincipal( char* p_opcion ){
	printf("\n          Elija una opcion\n");
	printf("-----------------------------------------\n");
	printf(" 1 - Fijar la hora del reloj\n");
	printf(" 2 - Consultar la hora del reloj\n");
	printf(" 3 - Agregar evento del calendario\n");
	printf(" 4 - Quitar evento del calendario\n");
	printf(" 5 - Consultar lista de eventos activos\n");
	printf(" 6 - Salir\n\n");
	printf(" >> ");
	gets( p_opcion );
}



/*** BeginHeader MENU_fijarFechaHora */
void MENU_pedriHoraFecha();
/*** EndHeader */
void MENU_pedriHoraFecha(){   // devolver el struct
   struct tm* p_FechaHora;
   char dia;
   char mes;
   char ano;
   char hora;
   char minuto;
	printf("-------- CONFIGURACION: FIJAR HORA -------\n");
	
	printf(" Ingrese el ano: ");
	gets( ano );
	validarano(ano);

	printf(" Ingrese el mes: ");
	gets( mes );
	validarmes(mes);

	printf(" Ingrese el dia: ");
	gets( dia );
	validardia(dia,mes,ano);

	printf(" Ingrese el hora: ");
	gets( hora );
	validarhora(hora);

	printf(" Ingrese el minuto: ");
	gets( minuto );
	validarminuto(minuto);
	
	// ojo esta todo en char
	p_FechaHora->tm_hour = hora;
	p_FechaHora->tm_min = minuto;
	p_FechaHora->tm_mday =dia;
	p_FechaHora->tm_mon = mes;
	p_FechaHora->tm_year = ano;

	/*
		Aca es donde va la logica para leer los valores
	
	p_FechaHora->tm_hour = 1;
	p_FechaHora->tm_min = 23;
	p_FechaHora->tm_mday = 6;
	p_FechaHora->tm_mon = 4;
	p_FechaHora->tm_year = 19;*/
   //RTC_fijarFechaHora( p_FechaHora ); // ESto anda si en el test pero aca no anda por eso esta comentado
   printFechaHora( p_FechaHora );		// Imprimo la Fecha y hora modificados
}

/*** BeginHeader MENU_consultarHora */
void MENU_consultarHora();
/*** EndHeader */
void MENU_consultarHora(){
	// FALTA
}

/*** BeginHeader MENU_agregarEvento */
void MENU_agregarEvento();
/*** EndHeader */
void MENU_agregarEvento(){
	// FALTA
}

/*** BeginHeader MENU_eliminarEvento */
void MENU_eliminarEvento();
/*** EndHeader */
void MENU_eliminarEvento(){
	// FALTA
}

/*** BeginHeader MENU_consultarEventos */
void MENU_consultarEventos();
/*** EndHeader */
void MENU_consultarEventos(){
	// FALTA
}