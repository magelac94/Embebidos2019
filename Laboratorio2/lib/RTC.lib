/*** BeginHeader */
// Librerias a incluir
#use IO.LIB
#use rtclock.lib

// Definicion de macros
#define RTC_PORT		PORT_A
#define LED_SET(x)   	IO_setOutput( LED_PORT, x, LED_ON)

// Definicion de estructuras

// Definicion de variables

/*** EndHeader */

// Metodos
/*** BeginHeader RTC_fijarHora */
void RTC_fijarHora();
/*** EndHeader */
/*
void RTC_fijarHora(){
	// falta definir la variable HORA Y MINUTOS
	printf("Opcion 1 - Fijar Hora del reloj\n");
	printf("Ingrese la hora: \n");
	getswf( hora )
	if ( hora <= 0 || hora > 23 ){		// Valido que hora sea correcta
		printf("Valor Erroneo debe estar entre 0 y 23\n");
	} else {
		printf("Ingrese los minutos: \n");
		if ( minutos <= 0 || minutos > 59 ){ // Valido que los minutos sean correctos
			printf("Valor Erroneo debe estar entre 0 y 59\n");
		} else {
			
			pasamos la hora y minutos a timestamp - unsigned long mktime (struct tm *timeptr) -
			y lo seteamos con la funcion que nos da la libreria rtclock.lib
			-> void write_rtc (unsigned long int time)
			TIME es en formato timestamp
			
		}
	}
} */

/*** BeginHeader RTC_consultarHora */
void RTC_consultarHora();
/*** EndHeader */
void RTC_consultarHora(){
	printf("Opcion 2 - Consultar Hora del reloj\n");
	// Mostrar Hora
}