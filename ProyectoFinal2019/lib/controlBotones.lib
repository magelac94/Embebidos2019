// Libreria Lectura de Botones

/*** BeginHeader */

#define BTN_GET(x)			IO_getInput( (x>3)?PORT_F:PORT_B, (x>3)?x:(x+2) )
#define BTN_IsPRESSED(x)	((BTN_GET(x)==0)?1:0)

/*** EndHeader */

/*** BeginHeader indicadorLed */
void indicadorLed();
/*** EndHeader */
void indicadorLed(int i){
	LED_SET(i);
}


/*** BeginHeader botonesPosicion */
void botonesPosicion(char* tramaGPS, int i);
/*** EndHeader */
void botonesPosicion(char* tramaGPS, int i){
	int verificarPos;
	verificarPos = verificarPosicion(tramaGPS);
	if(verificarPos == 1){
		indicadorLed(i);
		GPRS_sendsms(CHECKPOINT);
	}
}

/*** BeginHeader botonKeepAlive */
void botonKeepAlive();
/*** EndHeader */
void botonKeepAlive(){
	GPRS_sendsms(KEEPALIVE);
}
/*** BeginHeader botonAyuda */
void botonAyuda();
/*** EndHeader */
void botonAyuda(){
	GPRS_sendsms(HELP);
}

/*** BeginHeader tarea_botones */
void tarea_botones(void* trama);
/*** EndHeader */
void tarea_botones(void* trama){
	int i;
	i = 0;
	while(1)
	{
		for( i=0; i<8; i++ )
		{ 
			if( BTN_IsPRESSED(i) )
			{
				switch( i ){
					case( 0 ):
						botonesPosicion(trama, i);
						break;
					case( 1 ):
						botonesPosicion(trama, i);
						break;
					case( 2 ):
						botonesPosicion(trama, i);
						break;
					case( 3 ):
						botonesPosicion(trama, i);
						break;
					case( 4 ):
						botonesPosicion(trama, i);
						break;
					case( 5 ):
						botonesPosicion(trama, i);
						break;
					case( 6 ):
						botonKeepAlive();
						break;
					case( 7 ):
						
						botonAyuda();
						break;
				}
				OSTimeDlyHMSM(0,0,0,500);
			}
		}
	}
}

