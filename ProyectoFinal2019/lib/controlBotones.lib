// Libreria Lectura de Botones

/*** BeginHeader */

#use IO.LIB

#define BTN_GET(x)			IO_getInput( (x>3)?PORT_F:PORT_B, (x>3)?x:(x+2) )
#define BTN_IsPRESSED(x)	((BTN_GET(x)==0)?1:0)

/*** EndHeader */

botonesPosicion(){
	if(verificarPosicion()){
		enviarMensaje();
		indicadorLed();	 // 				LED_SET(i);
	}
}

botonKeepAlive(){
	obtenerPosicion();
	enviarMensaje();
}

botonAyuda(){
	obtenerPosicion();
	enviarMensaje();
}

/*** BeginHeader tarea_botones */
void tarea_botones(void* pdata);
/*** EndHeader */
void tarea_botones(void* pdata){
	while(1)
	{
		for( i=0; i<8; i++ )
		{
			if( BTN_IsPRESSED(i) )
			{
				switch( i ){
					case( 1 ):
						botonesPosicion();
						break;
					case( 2 ):
						botonesPosicion();
						break;
					case( 3 ):
						botonesPosicion();
						break;
					case( 4 ):
						botonesPosicion();
						break;
					case( 5 ):
						botonesPosicion();
						break;
					case( 6 ):
						botonesPosicion();
						break;
					case( 7 ):
						botonKeepAlive();
						break;
					case( 8 ):
						botonAyuda();
						break;
				}	
			}
		}
	}
}

